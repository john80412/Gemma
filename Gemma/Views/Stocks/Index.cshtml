@model IPagedList<Gemma.ViewModel.StockViewModel>
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}
@section topCSS{
    <link href="~/Content/PagedList.css" rel="stylesheet"/>
}
@if ((bool?)TempData["message"] == false)
{
    @section endJS{
        <script>
        var message = @Html.Raw(Json.Encode("此項目已存在"));
        alert(message)
        </script>
    }
}
<div class="app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header">
    @Html.Partial("_BackStagePartialTop")
    <div class="app-main">
        @Html.Partial("_BackStagePartialMain")
        <div class="app-main__outer">
            <div class="app-main__inner">

                <p>
                    @Html.ActionLink("新增", "Create")
                </p>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-inline">
                        <div class="form-group">
                            產品:@Html.TextBox("productName")
                        </div>

                        <div class="form-group">
                            顏色:@Html.TextBox("colorName")
                        </div>

                        <div class="form-group">
                            尺寸:@Html.TextBox("size")
                        </div>
                        <div class="form-group" style="display:none">
                            @Html.TextBox("search","true")
                        </div>

                        <div class="form-group">
                            <div>
                                <input type="submit" value="查詢" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ColorName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().SizeID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Quantity)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ColorName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SizeID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new RouteValueDictionary { { "productID", item.ProductID }, { "colorID", item.ColorID }, { "sizeID", item.SizeID } }) |
                                @Html.ActionLink("Details", "Details", new RouteValueDictionary { { "productID", item.ProductID }, { "colorID", item.ColorID }, { "sizeID", item.SizeID } }) |
                                @Html.ActionLink("Delete", "Delete", new RouteValueDictionary { { "productID", item.ProductID }, { "colorID", item.ColorID }, { "sizeID", item.SizeID } })
                            </td>
                        </tr>
                    }

                </table>
                @Html.PagedListPager(Model,page => Url.Action("Index",new RouteValueDictionary { { "productName", (string)ViewBag.searchProductName }, { "colorName", (string)ViewBag.searchColorName }, { "size", (string)ViewBag.searchSize },{ "page",page }} ))
            </div>
        </div>
    </div>
</div>
