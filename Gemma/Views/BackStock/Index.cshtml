@model IPagedList<Gemma.ViewModel.StockViewModel>

@{
    ViewBag.Title = "Index";
}
@section topCSS{
    <link href="~/Content/PagedList.css" rel="stylesheet" />
}
@if ((bool?)TempData["message"] == false)
{
    @section endJS{
        <script>
        var message = @Html.Raw(Json.Encode("此項目已存在"));
        alert(message)
        </script>
    }
}
<p>
    @Html.ActionLink("新增", "Create", null, new { @class = "btn btn-primary ml-3" })
</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        <div class="form-group">
            <label class="btn btn-info ml-3">產品</label>
            @Html.TextBox("productName", null, new { @class = "form-control ml-3" })
        </div>

        <div class="form-group">
            <label class="btn btn-info ml-3">顏色</label>
            @Html.TextBox("colorName", null, new { @class = "form-control ml-3" })
        </div>

        <div class="form-group">
            <label class="btn btn-info ml-3">尺寸</label>
            @Html.TextBox("size", null, new { @class = "form-control ml-3" })
        </div>
        <div class="form-group" style="display:none">
            @Html.TextBox("search", "true")
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="查詢" class="btn btn-success ml-3" />
            </div>
        </div>
    </div>
}
<br>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ColorName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().SizeID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Quantity)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ColorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SizeID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.ActionLink("編輯", "Edit", new RouteValueDictionary { { "productID", item.ProductID }, { "colorID", item.ColorID }, { "sizeID", item.SizeID } }, new Dictionary<string, object> { { "class", "btn btn-success" } }) 
                @Html.ActionLink("詳細資料", "Details", new RouteValueDictionary { { "productID", item.ProductID }, { "colorID", item.ColorID }, { "sizeID", item.SizeID } }, new Dictionary<string, object> { { "class", "btn btn-info" } }) 
                @Html.ActionLink("刪除", "Delete", new RouteValueDictionary { { "productID", item.ProductID }, { "colorID", item.ColorID }, { "sizeID", item.SizeID } }, new Dictionary<string, object> { { "class", "btn btn-danger" } })
            </td>
        </tr>
    }

</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new RouteValueDictionary { { "productName", (string)ViewBag.searchProductName }, { "colorName", (string)ViewBag.searchColorName }, { "size", (string)ViewBag.searchSize }, { "page", page } }))
